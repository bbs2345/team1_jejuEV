# pom.xml파일 
<artifactId>
<name>

# application.properties파일
spring.application.name=
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=

===============================================================

# mysql

cmd창에서
1. root계정 접속
mysql -u root -p

2. 사용자 계정 만들기
create user '생성할계정이름'@'localhost' identified by '계정비밀번호';

3. 권한부여
grant all privileges on *.* to '계정이름'@'localhost' with grant option;
flush privileges;

quit눌러서 root계정 빠져나오고 사용자계정으로 접속

4. database 생성
create database mbcdb10 character set utf8 default collate utf8_general_ci;

5. 데이터베이스 목록 확인
show databases;

6. 데이터베이스 접속
use 사용할database명;

7. 테이블 목록 확인
use 사용할database명; -> show tables;

====================================================================

# git ---로컬에서 하는 거

해당 폴더에서 gitbash -> git init -> .git폴더 생김 (안보이면 폴더 메뉴에서 보기 숨김항목 체크)

1. git 환경설정
git config --global user.name "~~~"
git config --global user.email "~~~@example.com"
git config --global init.defaultbranch main

2. git 환경설정 결과 목록 확인
git config --list

3. 브랜치 목록 확인
git branch

4. dev브랜치 생성 / dev브랜치 생성과 체크아웃
git branch dev / git checkout -b dev

5. dev브랜치로 변경
git checkout dev

6. topic브랜치 삭제 / merge 안 된 topic브랜치 삭제
git branch -d topic / git branch -D topic

7. 리셋(로컬에서 topic브랜치에서 작업할때만)
git log에서 해시값 복사
git reset --hard 해시값

8. 상태확인
git status

9. log확인
git log

10. dev브랜치와 topic브랜치 병합
topic에서 커밋까지하고 dev로 이동 -> git merge topic

작업순서
topic브랜치에서 작업 -> (git status) -> git add . -> (git status)
 -> git commit -m "커밋메시지" -> (git status) -> git log
git checkout dev -> git merge topic -> git branch -d topic
 
===========================================================================

# github --- 원격저장소, origin

1. 원격 저장소 확인
git remote -v

2. 원격 저장소와 연동 / 원격 저장소 연동해제
git remote add origin 복사한 주소 / git remote remove origin

3. 원격저장소에 업로드(push)
git push origin topic

4. 원격저장소에서 가져오기(pull)
git pull origin dev

5. 원격저장소 topic브랜치 삭제
git push -d origin topic

작업순서
로컬에서 topic브랜치에서 작업 -> 커밋까지 하고 -> git checkout dev -> git pull origin dev
-> git checkout topic -> git rebase dev -> git push origin topic ->
-> PR요청 -> PR승인 -> git push -d origin topic

===================================================================================










































